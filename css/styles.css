:root {
  --primary-color: #357b70;
  --secondary-color: #e0b354;
  --visited-color: #05676e;
  --active-color: #489c79;
  --light-gray: #f3f3f3;
  --text-family: "lato", sans-serif;
  --text-color: #fff;
  --animation-color-from: #edc655;
  --animation-color-mid: #fcffad;
  --animation-color-to: #f76414;
  --body-font-size: 16px;
  --body-font-weight: 400;
  --h1-font-size: 30px;
  --h1-font-weight: bold;
}

/* Global Styles */
* {
  box-sizing: border-box;
}
body {
  font-size: 14px;
  font-weight: 400;
  font-family: "Poppins", sans-serif;
  color: #333;
}
p {
  color: #565656;
  line-height: 1.8;
}

.page-header {
  display: flex;
  padding: 10px;
  margin: 10px;
  width: 100%;
}
.page-header__item {
  flex: 0 1 200px;
}

.button,
button {
  /* overwrites browser defoults and reset the border */
  border: none;
  display: inline-block;
  /*Take the font from the outer container(In this case its the body)*/
  font-family: inherit;
  /* Styles the background color, font color and text decoration of the botun*/
  background-color: var(--primary-color);
  color: var(--text-color);
  text-decoration: none;
  /* adds spacing to the button*/
  padding: 10px;
  border-radius: 3px;
  /*gives the button a bottom border with a width of 2 px
  of solid, and a color in RGBA format*/
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  /* duration and property transitions*/
  transition: 0.2s opacity;
}

button:hover,
button:focus,
.navigation-list,
.button:hover,
.button:focus {
  /*lets the maus cursor apears as a hand when hovering over the button*/
  cursor: pointer;
  /*reduce the opacity of the button to 80%*/
  opacity: 0.8;
  /*make the font bigger when hover the Button*/
}

.profile {
  max-width: 900px;
  margin: 0 auto; /*auto spacing to left and right*/
}
.profile__portrait {
  float: left;
  width: 400px;
  max-width: 100%;
  height: 400px;
  margin-right: 40px;
  border-radius: 50%;
}

.section {
  min-height: 800px;
}
/*.container {
  width: 1170px;
  max-width: 90%;
  margin: 0 auto;
}*/
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.content-wrapper {
  width: 80%;
  margin: 0 auto;
  display: table;
  min-height: 800px;
}
.content {
  display: table-cell;
  width: 100%;
  vertical-align: middle;
}
/* End Global Styles */

/* Start Nav Styles */
.navbar {
  position: fixed;
  z-index: 999;
  top: 50%;
  right: 50px;
  transform: translateY(-50%);
}
.navbar .nav-menu {
  margin: 0;
  padding: 0;
  list-style-type: none;
}
.navbar .nav-menu li {
  position: relative;
  min-width: 200px;
  text-align: right;
}
.navbar .nav-menu li .dot {
  display: block;
  color: #fff;
  padding: 5px 0;
}
.navbar .nav-menu li .dot::before,
.navbar .nav-menu li .dot::after {
  display: block;
  position: absolute;
  content: "";
  border-radius: 50%;
  top: 50%;
  transition: all 0.3s ease;
}
.navbar .nav-menu li .dot::before {
  width: 5px;
  height: 5px;
  right: 0;
  border: 2px solid #181818;
  transform: translateY(-50%);
}
.navbar .nav-menu li .dot::after {
  width: 15px;
  height: 15px;
  border: 2px solid #357b70;
  right: -5px;
  transform: translateY(-50%) scale(0);
}
.navbar .nav-menu li .dot.active::before,
.navbar .nav-menu li:hover .dot::before {
  background: #357b70;
  border-color: #357b70;
}
.navbar .nav-menu li .dot.active::after,
.navbar .nav-menu li:hover .dot::after {
  transform: translateY(-50%) scale(1);
}
.navbar .nav-menu li .dot span {
  display: inline-block;
  opacity: 0;
  font-weight: 700;
  letter-spacing: 0.5px;
  text-transform: capitalize;
  background-color: #357b70;
  padding: 10px 20px;
  border-radius: 3px;
  margin-right: 30px;
  transform: translateX(20px);
  transition: all 0.3s ease;
}
.navbar .nav-menu li .dot span::before {
  display: block;
  position: absolute;
  content: "";
  border-left: 7px solid #357b70;
  border-top: 7px solid transparent;
  border-bottom: 7px solid transparent;
  top: 50%;
  transform: translate(7px, -50%);
  right: 0;
  transition: all 0.3s ease;
}
.navbar .nav-menu li .dot.active span,
.navbar .nav-menu li:hover .dot span {
  transform: translateX(0px);
  opacity: 1;
}
/* End Nav Styles */

/* Start Home Styles */
#home {
  background-color: #f6f6f6;
}
#home button {
  border: 2px solid #ffc107;
  background-color: transparent;
  outline: none;
  cursor: pointer;
  padding: 12px 25px;
  font-weight: 700;
  font-family: "Poppins", sans-serif;
  transition: all 0.3s ease;
  margin-top: 20px;
}
#home button:hover {
  background-color: #ffc107;
  color: #fff;
}
/* End Home Styles */

/* Start About Styles */
#about .container {
  padding: 100px 0;
}
#about p {
  width: 60%;
  margin: 10px auto;
}
#about img {
  margin-top: 40px;
}
/* End About Styles */

/* Start Services Styles */
#services {
  background-color: #eee;
}
#services .services {
  margin: 40px auto;
}
#services .services .service {
  width: 50%;
  padding: 1%;
}

.work {
  width: 400px;
  max-width: 100%;
  height: 400px;
  margin-right: 40px;
}

#services .text-right {
  float: right;
}
#services .text-left {
  float: left;
}
/* End Services Styles */

/* Start Contact Styles */

.contact-container__item {
  margin: auto;
  text-align: center;
}
/* End Contact Styles */

/* Start Footer Styles */
.page-footer {
  display: flex;
  clear: both;
  text-align: center;
  flex-direction: column;
}
/* End Footer Styles */

.about {
  text-align: center;
  margin: auto;
}
/*remove the dots from ul tag*/
.about__me {
  list-style-type: none;
  font-weight: bold;
  padding-left: 0;
}

.berlin-illustration {
  display: block;
  margin: auto;
}

@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}
@media all and (min-width: 500px) and (max-width: 750px) {
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}
@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }
  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}

/*  SUN ANIMATION*/
@keyframes color-change {
  0% {
    fill: var(--animation-color-from);
  }
  50% {
    fill: var(--animation-color-mid);
  }
  100% {
    fill: var(--animation-color-to);
  }
}
.sun {
  animation: 4s color-change infinite alternate linear;
}

/* Claud ANIMATION*/
@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}
.cloud-front {
  animation-duration: 30s;
  animation-name: cloud-move;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}
/* Cloud back*/
@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }
  to {
    transform: translate(100px, 48px);
  }
}
.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}
/**
*
*  I used Normalize.css to reset elements.
*  I used Autoprifixer to make sure that I'm using the necessary vendor prefixes.
*
**/
